---
title: "Fit example models"
author: "Max Lindmark"
date: today
date-format: iso
toc: true
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 100%
editor: source
---

```{r load libraries}
#| message: false
#| warning: false

# Load libraries
library(tidyverse)
library(tidylog)
library(sdmTMB)
library(patchwork)
library(viridis)
library(RColorBrewer)
library(modelr)
library(ggstats)
library(ggspatial)
library(ggsidekick); theme_set(theme_sleek())

home <- here::here()
source(paste0(home, "/R/functions/map-plot.R"))
```

Read data and prediction grid, scales variables

```{r data}
#| message: false
# Read data
d <- readr::read_csv(paste0(home, "/data/clean/larval_size.csv")) |> 
  drop_na(temp) |>
  drop_na(chl) |>
  #drop_na(depth) |>
  mutate(
    yday_ct = yday - mean(yday),
    year_f = as.factor(year),
    species_f = as.factor(species),
    year_ct = year - median(year)
    ) |>
    mutate(across(.cols = c("temp", "chl", "depth"),
                  .fns = scale,
                  .names = "{.col}_sc"))

coul <- brewer.pal(11, "Spectral") 
coul <- colorRampPalette(coul)(length(unique(d$species)))

ggplot(d, aes(length_mm, fill = species)) + 
  geom_histogram() + 
  scale_fill_manual(values = coul, name = "Species") + 
  coord_cartesian(expand = 0) + 
  labs(y = "Count", x = "Length (mm)", tag = "b)") + 
  theme(legend.text = element_text(face = "italic", size = 7),
        legend.key.size = unit(0.25, "cm"),
        legend.position.inside = c(0.2, 0.69),
        plot.tag = element_text())

# Load prediction grid
pred_grid <- readr::read_csv(paste0(home, "/data/clean/pred_grid.csv")) |> 
  drop_na(temp) |> 
  drop_na(chl) |>
  filter(year %in% unique(d$year)) |> 
  mutate(
    temp_sc = (temp - mean(d$temp, na.rm = TRUE)) / sd(d$temp, na.rm = TRUE),
    chl_sc = (chl - mean(chl, na.rm = TRUE)) / sd(chl, na.rm = TRUE),
    depth_sc = (depth - mean(depth, na.rm = TRUE)) / sd(depth, na.rm = TRUE),
    year_f = as.factor(year),
    year_ct = 0,
    yday_ct = 0
    ) |> 
  mutate(keep = ifelse(lon < 10 & lat < 57.15, "N", "Y")) |> 
  filter(keep == "Y") |> dplyr::select(-keep)

## Plot covariates in space
# First gather the elements common to all the covariate plots
covMapTheme <- plot_map + 
  theme(legend.position.inside = c(0.25, 0.12),
        legend.direction = "horizontal",
        legend.key.width = unit(0.25, "cm"), # Decreased to fit multicovariates
        legend.key.height = unit(0.2, "cm"),
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 8),
        plot.tag = element_text()) +
  guides(fill = guide_colorbar(position = "inside",
                               title.position = "top",
                               title.hjust = 0.5)) + 
  geom_sf() +
  annotate("text", label = "Sweden", x = xmin2 + 0.95*xrange, y = ymin2 + 0.75*yrange,
           color = "gray50", size = 2.5) + 
  annotate("text", label = "Norway", x = xmin2 + 0.08*xrange, y = ymin2 + 0.95*yrange,
           color = "gray50", size = 2.5) +
  annotate("text", label = "Denmark", x = xmin2 + 0.42*xrange, y = ymin2 + 0.45*yrange,
           color = "gray50", size = 2.5) + 
  guides(fill = guide_colorbar(position = "inside", title.position = "top", title.hjust = 0.5))

# Generate the covariate maps
p_tempCovMap <- covMapTheme +
  geom_raster(data = pred_grid |> 
                group_by(X, Y) |> 
                summarise(mean_temp = mean(temp)),
              aes(X*1000, Y*1000, fill = mean_temp)) + 
  labs(tag = "a)") + 
  scale_fill_viridis(option = "magma", name = "Temperature (Â°C)") +
  annotation_scale(bar_cols = c("grey30", "white"), height = unit(0.1, "cm")) + 
  annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.85, "cm"),
                         width = unit(0.85, "cm"), pad_x = unit(0.1, "in"), pad_y = unit(0.1, "in"),
                         style = north_arrow_fancy_orienteering(
                           fill = c("grey40", "white"),
                           line_col = "grey20")) +
  theme(axis.text.x = element_blank(),
        axis.title.x = element_blank())

p_chlCovMap <- covMapTheme +
  geom_raster(data = pred_grid |> 
                group_by(X, Y) |> 
                summarise(mean_chl = mean(chl)),
              aes(X*1000, Y*1000, fill = mean_chl)) +
  labs(tag = "b)") + 
  scale_fill_viridis(option = "mako", name = "Chl (mg/l^3)") +
  theme(axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank())

p_depthCovMap <- covMapTheme +
  geom_raster(data = pred_grid,
              aes(X*1000, Y*1000, fill = depth)) + 
  labs(tag = "c)") + 
  geom_contour(data = pred_grid, 
               aes(X*1000, Y*1000, z = depth), 
               color = "grey75", binwidth = 100, size = 0.1) +
  scale_fill_gradient(
  low = "#079dfa",
  high = "#132B43"
  )

nb.cols <- length(unique(d$species))
mycolors <- colorRampPalette(brewer.pal(12, "Set3"))(nb.cols)

p_dat <- covMapTheme +
  geom_point(data = d, aes(X*1000, Y*1000, color = species),
             size = 0.5, alpha = 1) + 
  scale_color_manual(values = mycolors) +
  labs(tag = "d)") +
  theme(axis.text.y = element_blank(),
        axis.title.y = element_blank())

# Display (togheter with length distribution by species) 
p_tempCovMap + p_chlCovMap + p_depthCovMap + p_dat +
  plot_layout(axes = "collect")

# Save
ggsave(paste0(home, "/figures/data_map.pdf"), width = 20, height = 20, units = "cm")

# Plot over time
pred_grid |> 
  pivot_longer(c(temp, chl), names_to = "var") |> 
  mutate(var = fct_recode(var, 
                          "Temperature" = "temp", 
                          "Chlorophyll" = "chl")) |> 
  summarise(value = mean(value), .by = c(var, year)) |> 
  ggplot(aes(year, value)) + 
  facet_wrap(~var, scales = "free") + 
  geom_point(color = "grey30") + 
  #geom_smooth(method = "gam", formula = y~s(x, k = 5))
  geom_smooth(method = "lm", color = "steelblue") + 
  labs(x = "Year") + 
  theme(axis.title.y = element_blank())

ggsave(paste0(home, "/figures/covars_trends.pdf"), width = 19, height = 9, units = "cm")
```

## Fit models by species

```{r}
pars_list <- list()
res_list <- list()
marg_list <- list()
spatial_list <- list()
range_list <- list()
genq_list <- list()

for(i in unique(d$species)) {  
    
  print(i)
  
  dd <- d |> filter(species == i)
  
  mesh <- make_mesh(dd,
                    xy_cols = c("X", "Y"),
                    cutoff = 5)
  
    if(unique(dd$species) %in% c("Anguilla anguilla", "Taurulus bubalis", "Argentina silus",
                                 "Syngnathus rostellatus", "Agonus cataphractus")) {
    
      # No spatial
      m0 <- sdmTMB(length_mm ~ temp_sc + depth_sc + chl_sc + year_ct + yday_ct,
                   data = dd,
                   mesh = mesh,
                   family = gengamma(link = "log"),
                   spatiotemporal = "off",
                   spatial = "off")
      print(m0)
      sanity(m0)
      # samps <- sdmTMBextra::predict_mle_mcmc(m0, mcmc_iter = 201, mcmc_warmup = 200)
      # dd$m0_res <- as.vector(residuals(m0, type = "mle-mcmc", mcmc_samples = samps))
      dd$m0_res <- residuals(m0, type = c("mle-mvn"))
      
    } else{
      
      # Spatial
      m0 <- sdmTMB(length_mm ~ temp_sc + depth_sc + chl_sc + year_ct + yday_ct,
                   data = dd,
                   mesh = mesh,
                   family = gengamma(link = "log"),
                   spatiotemporal = "off",
                   spatial = "on")
      print(m0)
      sanity(m0)
      # samps <- sdmTMBextra::predict_mle_mcmc(m0, mcmc_iter = 201, mcmc_warmup = 200)
      # dd$m0_res <- as.vector(residuals(m0, type = "mle-mcmc", mcmc_samples = samps))
      dd$m0_res <- residuals(m0, type = c("mle-mvn"))
      
      ggplot() +
        inlabru::gg(mesh$mesh) +
        coord_fixed() +
        geom_point(aes(X, Y), data = dd, alpha = 0.2, size = 0.5) +
        annotate("text", -Inf, Inf, label = paste("n knots = ", mesh$mesh$n), hjust = -0.1, vjust = 2) + 
        labs(x = "Easting (km)", y = "Northing (km)")
      ggsave(paste0(home, paste("/figures/supp/mesh_", i, "_.pdf")), width = 14, height = 14, units = "cm")
      
    }

  # Make marginal effects plots
  marg_year <- ggeffects::ggeffect(m0, "year_ct") |> as_tibble() |> mutate(var = "Year")
  marg_temp <- ggeffects::ggeffect(m0, "temp_sc") |> as_tibble() |> mutate(var = "Temperature")
  marg_chl <- ggeffects::ggeffect(m0, "chl_sc") |> as_tibble() |> mutate(var = "Chlorophyll")
  
  p <- predict(m0, newdata = pred_grid)

  
  # Get range
  if(unique(dd$species) %in% c("Anguilla anguilla", "Taurulus bubalis", "Argentina silus",
                               "Syngnathus rostellatus", "Agonus cataphractus")) {
    
      range <- tibble()
      
    } else{
      
      range <- tidy(m0, effects = "ran_pars") |> filter(term == "range")
      
    }
  
  # Get gengamma Q and phi
  genq_list[[i]] <- tibble(term = "gengamma_Q",
                  estimate = m0$sd_report$par.fixed["gengamma_Q"]) |> 
    bind_rows(tidy(m0, effects = "ran_pars") |> filter(term == "phi")) |> 
    mutate(species = i)
  
  
  # Store data
  pars_list[[i]] <- tidy(m0) |> mutate(species = i)
  res_list[[i]] <- dd
  marg_list[[i]] <- bind_rows(marg_year, marg_temp, marg_chl) |> mutate(species = i)
  spatial_list[[i]] <- p |> mutate(species = i)
  range_list[[i]] <- range |> mutate(species = i)
         
}

pars <- bind_rows(pars_list)
res <- bind_rows(res_list) |> dplyr::select(m0_res, species_f)
marg <- bind_rows(marg_list)
spatial <- bind_rows(spatial_list)
range <- bind_rows(range_list)
genq <- bind_rows(genq_list)
 
write_csv(pars, paste0(home, "/output/pars.csv"))
write_csv(res, paste0(home, "/output/residuals.csv"))
write_csv(marg, paste0(home, "/output/marginal_effects.csv"))
write_csv(spatial, paste0(home, "/output/spatial.csv"))
```

### Plot residuals and other things

```{r}
# Plot residuals
ggplot(res, aes(sample = m0_res)) +
  stat_qq(size = 0.75, shape = 21, fill = NA) +
  stat_qq_line() +
  facet_wrap(~species_f, scales = "free") +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles") +
  theme(aspect.ratio = 1)

ggsave(paste0(home, "/figures/supp/residuals.pdf"), width = 20, height = 20, units = "cm")

# Plot range
ggplot(range, aes(estimate, reorder(species, estimate))) + 
  geom_point() + 
  geom_vline(xintercept = 5, alpha = 0.5, linetype = 2)

# Plot generalized gamma
# The lognormal occurs as the internal parameter gengamma_Q approaches 0
genq |> 
  filter(term == "gengamma_Q") |> 
  ggplot(aes(estimate, species)) + 
  facet_wrap(~term, ncol = 1) +
  geom_point() + 
  geom_vline(xintercept = 0, alpha = 0.5, linetype = 2)

# If Q matches phi the distribution should be the gamma.
genq |> 
  ggplot(aes(estimate, species, color = term)) + 
  geom_point()
```

### Coefficients

```{r}
#| message: false
#| warning: false

# Single species approach
pars_order <- pars |> 
  filter(term %in% c("year_ct")) |> 
  arrange(estimate)

pars |> 
  # left_join(d |> distinct(life_stage, species)) |> 
  # filter(life_stage == "larvae") |> 
  filter(term %in% c("temp_sc", "year_ct", "chl_sc")) |> 
  mutate(term = fct_recode(term,
                           "Temperature" = "temp_sc",
                           "Year" = "year_ct",
                           "Chlorophyll" = "chl_sc")) |> 
  mutate(sign = ifelse(estimate > 0, "pos", "neg"),
         sig = ifelse(estimate > 0 & conf.low > 0, "sig", "not sig"),
         sig = ifelse(estimate < 0 & conf.high < 0, "sig", sig)) |> 
  ggplot(aes(estimate, factor(species, levels = pars_order$species), fill = sig, color = sign, shape = sig)) + 
  facet_wrap(~factor(term, levels = c("Year", "Temperature", "Chlorophyll")), scales = "free_x") +
  geom_point(fill = NA) + 
  scale_shape_manual(values = c(21, 19)) +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), 
                width = 0, alpha = 0.3) + 
  geom_vline(xintercept = 0, alpha = 0.3, linetype = 2, linewidth = 0.25) +
  theme(axis.text.y = element_text(face = "italic")) + 
  labs(y = "Species", x = "Slope") + 
  scale_color_brewer(palette = "Dark2", direction = -1) +
  scale_fill_brewer(palette = "Dark2", direction = -1) +
  guides(color = "none", shape = "none") +
  geom_stripped_rows(aes(y = species), inherit.aes = FALSE) +
  theme(legend.position = "bottom")

ggsave(paste0(home, "/figures/coefs.pdf"), width = 20, height = 12, units = "cm")

pars |> 
  filter(term %in% c("depth_sc", "yday_ct")) |> 
  mutate(term = fct_recode(term,
                           "Day of the year" = "yday_ct",
                           "Depth" = "depth_sc")) |> 
  mutate(sign = ifelse(estimate > 0, "pos", "neg"),
         sig = ifelse(estimate > 0 & conf.low > 0, "sig", "not sig"),
         sig = ifelse(estimate < 0 & conf.high < 0, "sig", sig)) |> 
  ggplot(aes(estimate, factor(species, levels = pars_order$species), fill = sig, color = sign, shape = sig)) + 
  facet_wrap(~factor(term), scales = "free_x") +
  geom_point(fill = NA) + 
  scale_shape_manual(values = c(21, 19)) +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), 
                width = 0, alpha = 0.3) + 
  geom_vline(xintercept = 0, alpha = 0.3, linetype = 2, linewidth = 0.25) +
  theme(axis.text.y = element_text(face = "italic")) + 
  labs(y = "Species", x = "Slope") + 
  scale_color_brewer(palette = "Dark2", direction = -1) +
  scale_fill_brewer(palette = "Dark2", direction = -1) +
  guides(color = "none", shape = "none") +
  geom_stripped_rows(aes(y = species), inherit.aes = FALSE) +
  theme(legend.position = "bottom")

ggsave(paste0(home, "/figures/supp/extra_coefs.pdf"), width = 20, height = 12, units = "cm")

```

### Marginal predictions of temperature, chl and year, with real values on the x and data, on 3 select species with contrasting trends.

```{r}
#| message: false

marg |> 
  mutate(predicted_sc = predicted - mean(predicted), .by = species) |> 
  ggplot(aes(x, predicted_sc, color = species)) + 
  facet_grid(var~species, scales = "free") +
  geom_line()

sort(unique(marg$species))

d |> 
  summarise(n = n(), .by = species) |> 
  arrange(desc(n))

marg |> 
  filter(species %in% c("Clupea harengus", "Pholis gunnellus", "Chirolophis  ascanii")) |> 
  ggplot(aes(x, predicted, ymin = conf.low, ymax = conf.high)) + 
  ggh4x::facet_grid2(species~factor(var, levels = c("Year", "Temperature", "Chlorophyll")),
                     scales = "free") +
  geom_ribbon(alpha = 0.3) +
  geom_line()

ggsave(paste0(home, "/figures/marginal.pdf"), width = 17, height = 15, units = "cm")
```

## Spatial plots

```{r}
plot_map + 
  geom_raster(data = spatial |> filter(species == "Clupea harengus"),
              aes(X*1000, Y*1000, fill = exp(est))) + 
  scale_fill_viridis()

plot_map + 
  geom_raster(data = spatial |> filter(species == "Pholis gunnellus"),
              aes(X*1000, Y*1000, fill = exp(est))) + 
  scale_fill_viridis()

plot_map + 
  geom_raster(data = spatial |> filter(species == "Chirolophis  ascanii"),
              aes(X*1000, Y*1000, fill = exp(est))) + 
  scale_fill_viridis()
```

