---
title: "Collate larval size data"
author: "Max Lindmark"
date: today
date-format: iso
toc: true
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 100%
editor: source
---

```{r load libraries}
#| message: false
#| warning: false

# Load libraries
library(tidyverse)
library(tidyterra)
library(tidylog)
library(tidync)
library(ggridges)
library(readxl)
library(janitor)
library(lubridate)
library(sdmTMB)
library(ncdf4)
library(patchwork)
library(terra)
library(viridis)
library(devtools)
library(ggsidekick); theme_set(theme_sleek())
library(crayon)

# Point to wd 
home <- here::here()

# Load all custom functions in R/function
# - map-plot [source_url("https://raw.githubusercontent.com/maxlindmark/cod-interactions/main/R/functions/map-plot.R")]
# - callCopernicusCovariate
# - extractCovariateAtLocation
for(fun in list.files(paste0(home, "/R/functions"))){
  source(paste(home, "R/functions", fun, sep = "/"))
}

```

# Explore data
## Read and clean data
### Old data

```{r merge stomach}
#| message: false
#| warning: false

# 1992 -2008
length_old <- read_excel(paste0(home, "/data/larvea/1992_2010 MIK SWE Alla arter.xlsx"),
                       sheet = 1,
                       skip = 20)

# Clean data!
length_old <- length_old %>% 
  # some columns are on row 19, most are on 20, so lets fix this manually
  # we take lat from trawl data
  # rename(lat = `lat degree...10`, 
  #        lon = `long degree...16`) %>% 
  # clean names so that I can pivot wider
  clean_names() %>% 
  pivot_longer(cols = x3:x130, names_to = "length_mm", values_to = "n") %>% 
  dplyr::select(year, day, month, haul, species, n, length_mm) %>% 
  # make it numeric
  mutate(length_mm = as.numeric(str_remove(length_mm, "x"))) %>% 
  # NA n means there was no recorded larvae in that size group (note there are also 0s in the data)
  drop_na(n) %>%
  filter(n > 0) %>% 
  # expand the data so that 1 row is 1 individual
  # FIXME: the counts are not integers?! (hence the need for round)
  uncount(round(n)) %>% 
  dplyr::select(-n) %>% 
  # make a unique haul ID so that we can match with trawl data
  mutate(haul_id = paste(year, month, day, haul, sep = "_"))

# Read trawl data and match in coordinates
trawl_old <- read_excel(paste0(home, "/data/larvea/1992-2010 MIK SWE TrÃ¥ldata.xlsx"),
                        sheet = 1,
                        skip = 8) %>% 
  clean_names() %>% 
  # the last two coordinate columns are decimal degrees of haul position
  rename(haul = haul_no,
         lat = lat_decim_20,
         lon = long_decim_21) %>% 
  # two rows without info, including year, so I'm dropping these
  drop_na(year) %>% 
  mutate(haul_id = paste(year, month, day, haul, sep = "_")) %>% 
  distinct(haul_id, .keep_all = TRUE) %>% 
  dplyr::select(haul_id, lat, lon, temp)
  
# Join trawl data to length data
length_old <- length_old %>%
  left_join(trawl_old, by = "haul_id") %>%
  dplyr::select(-haul) %>% 
  mutate(period = "old",
         day = as.numeric(day),
         month = as.numeric(month))
```

### New data

```{r}
#| message: false
#| warning: false
# 1992 -2008
length_new <- read_excel(paste0(home, "/data/larvea/ELDB(s) bara fisk 2008-2024.xlsx")) %>% 
  clean_names() %>% 
  rename(length_mm = length) %>% 
  dplyr::select(haul_id, species, length_mm) %>% 
  drop_na(length_mm)

trawl_new <- read_excel(paste0(home, "/data/larvea/ELDB 2008-2024.xlsx")) %>% 
  clean_names() %>% 
  rename(lat = start_latitud,
         lon = start_longitud) %>% 
  dplyr::select(year, day, month, haul_id, lat, lon, sur_temp) %>% 
  rename(temp = sur_temp)

length_new <- length_new %>% 
  left_join(trawl_new, by = "haul_id") %>%
  mutate(period = "old",
         year = as.numeric(year),
         day = as.numeric(day),
         month = as.numeric(month))
```

### Join old and new

```{r}
#| message: false
#| warning: false
d <- bind_rows(length_new, length_old) %>% 
  mutate(yday = yday(paste(year, month, day, sep = "-"))) %>% 
  filter(lon > 8) %>% 
  drop_na(lat) %>% 
  rename(temp_obs = temp)

# Add km UTM coords
d <- d %>%
  add_utm_columns(ll_names = c("lon", "lat"))
```

## Explore data

```{r}
#| message: false
#| warning: false
# Sample size
plot_map_fc + 
  geom_point(data = d %>% 
               group_by(haul_id, Y, X, year) %>% 
               summarise(n = n()),
             aes(X*1000, Y*1000, color = n),
             size = 0.5) + 
  facet_wrap(~year, ncol = 8) + 
  scale_color_viridis(trans = "sqrt") + 
  ggtitle("Sample size per haul")

# Day of the year
plot_map_fc + 
  geom_point(data = d %>% 
               distinct(haul_id, .keep_all = TRUE),
             aes(X*1000, Y*1000, color = yday),
             size = 0.5) + 
  facet_wrap(~year, ncol = 8) + 
  scale_color_viridis(trans = "sqrt") + 
  ggtitle("Day of the year of sampling in space")

# Which dates are sampled?
d %>% 
  ggplot(aes(as.factor(month))) + 
  scale_fill_viridis(discrete = TRUE) +
  geom_histogram(stat= "count")

d %>% 
  ggplot(aes(x = yday, y = as.factor(year), fill = after_stat(x))) + 
  scale_fill_viridis(alpha = 0.8, name = "") +
  geom_density_ridges_gradient(alpha = 0.75) + 
  theme_facet_map() + 
  labs(y = "year")

# Species
sort(unique(d$species))

# Clean species names!
d <- d %>% 
  mutate(species = str_to_sentence(species))

sort(unique(d$species))

# FIXME: check Physidae, Phycidae
d <- d %>% 
  filter(!species %in% c("Unidentified", "Sprattus sprattus adult", "Clupea harengus adult"))

d %>% 
  group_by(year, species) %>% 
  summarise(n = n()) %>% 
  ggplot(aes(year, n, fill = species)) + 
  guides(fill = "none") + 
  facet_wrap(~species, scales = "free_y") + 
  geom_bar(stat = "identity")

# Filter species with at least 5 years of data and minimum 5 sizes per year
d <- d %>% 
  group_by(species, year) %>% 
  # At least 3 samples by year
  mutate(n = n()) %>% 
  ungroup() %>% 
  filter(n >= 3) %>% 
  group_by(species) %>% 
  mutate(n_years = length(unique(year))) %>% 
  ungroup() %>% 
  filter(n_years >= 5) %>% 
  dplyr::select(-n_years, -n)

d %>% 
  group_by(year, species) %>% 
  summarise(n = n()) %>% 
  ggplot(aes(year, n, fill = species)) + 
  guides(fill = "none") + 
  facet_wrap(~species, scales = "free_y", ncol = 5) + 
  geom_bar(stat = "identity") + 
  scale_fill_viridis(discrete = TRUE)

# Plot species samples in space, color by year
plot_map_fc + 
  geom_point(data = d,
             aes(X*1000, Y*1000, color = year),
             size = 0.5) + 
  facet_wrap(~species, ncol = 6) + 
  scale_color_viridis() + 
  ggtitle("Samples in space by species and year")

# FIXME: Crystallugobius not a larvate, right?
summary(d$year)

```

## Add covariate to hauls


```{r}

# Specify covariates path for simplicity
covPath <- paste0(home, "/data/covariates")

```

### Satelite derived temperatures
https://data.marine.copernicus.eu/product/SST_BAL_SST_L4_REP_OBSERVATIONS_010_016/description


```{r}
## Load satellite derived SST.
# Source: https://data.marine.copernicus.eu/product/SST_BAL_SST_L4_REP_OBSERVATIONS_010_016/download
# Print details
print(nc_open(paste(covPath, "sst", "DMI_BAL_SST_L4_REP_OBSERVATIONS_010_016_1711802008633.nc", sep = "/")))

# Load and gather the temperature data in a tibble
temp_tibble <- callCopernicusCovariate("sst", messages = 1) 


```

```{r}

# Visualize temperature frequency distribution
hist(temp_tibble$sst)

# Visualize temperature spatial distribution
# plot_map +
#   geom_point(data = temp_tibble,
#              aes(X*1000, Y*1000, color = sst))

# Obtain temporal availability, this will be the temporal window to filter the data 
unique(temp_tibble$year)

# Trim years we have temperature for (again, annoying! Fix the temperatures later)
d <- d %>% 
  filter(year %in% unique(temp_tibble$year))

# Loop through all year combos, extract the temperatures at the data locations
d <- extractCovariateAtLocation(
  "sst", # Name of the covariate to extract. One of: sst, chlorophyll, depth. 
  d, # A df containing the set of yearand locations to be evaluated.
  temp_tibble,  # A df containing the covariate at location
  "temp",# Name to give to the covariate evaluated at location in the df
  messages = 1 # dichotomous
)

```

### Satelite derived chlorophyll abundance
https://data.marine.copernicus.eu/product/GLOBAL_MULTIYEAR_BGC_001_029/description

```{r}
## Load satellite derived chlorophyll
# Source: https://data.marine.copernicus.eu/product/GLOBAL_MULTIYEAR_BGC_001_029/download
# Print details
print(nc_open(paste(covPath, "chlorophyll", "cmems_mod_glo_bgc_my_0.25_P1D-m_1713795613611_01012017_12312022.nc", sep = "/")))

# Load and gather the temperature data in a tibble
chl_tibble <- callCopernicusCovariate("chlorophyll", messages = 1) 


```

```{r}

# Visualize chlorophyll frequency distribution
hist(chl_tibble$chl)

# Visualize chlorophyll spatial distribution
# plot_map +
#   geom_point(data = chl_tibble,
#              aes(X*1000, Y*1000, color = chl))

# Obtain temporal availability, this will be the temporal window to filter the data 
sort(unique(chl_tibble$year))

# Trim years we have temperature for (again, annoying! Fix the temperatures later)
d <- d %>% 
  filter(year %in% unique(chl_tibble$year)) # We loose 13% of the data by including chl. 

# Loop through all year combos, extract the temperatures at the data locations
d <- extractCovariateAtLocation(
  "chl", # Name of the covariate to extract. One of: sst, chlorophyll, depth. 
  d, # A df containing the set of yearand locations to be evaluated.
  temp_tibble,  # A df containing the covariate at location
  "chl",# Name to give to the covariate evaluated at location in the df
  messages = 1 # dichotomous
)

```




## Plot response variables

```{r}
#| message: false
#| warning: false
d %>% 
  summarise(n = n(), .by = species) %>% 
  arrange(desc(n))

# Distribution of data
ggplot(d, aes(length_mm)) + 
  geom_histogram() + 
  facet_wrap(~species, scales = "free")

# Effect of day of the year
ggplot(d, aes(yday, length_mm)) + 
  geom_point(size = 0.4, alpha = 0.4) +  
  geom_smooth(method = "lm") +
  facet_wrap(~species, scales = "free")

# Effect of year
ggplot(d, aes(year, length_mm)) + 
  geom_point(size = 0.4, alpha = 0.4) +  
  geom_smooth(method = "lm") +
  facet_wrap(~species, scales = "free")

# Effect of temperature
ggplot(d, aes(temp, length_mm)) + 
  geom_point(size = 0.4, alpha = 0.4) +  
  geom_smooth(method = "lm") +
  #geom_smooth() +
  facet_wrap(~species, scales = "free")
```

## Save data

```{r}
d <- d %>% drop_na(temp)

write_csv(d, paste0(home, "/data/clean/larval_size.csv"))
```

